def customImage

pipeline {
    agent {
        label "executor"
    }
    environment {
        REPO_URL = "https://github.com/mcieciora/ResponsibleDugong.git"
        DOCKERHUB_REPO = "mcieciora/responsible_dugong"
        DAYS_TO_KEEP_DOCKERHUB_IMAGES_POLICY = 2
    }
    triggers {
        cron("H 23 * * *")
    }
    options {
        skipDefaultCheckout()
    }
    stages {
        stage ("Checkout branch") {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: "agent_${NODE_NAME}", keyFileVariable: "key")]) {
                        sh 'GIT_SSH_COMMAND="ssh -i $key"'
                        git branch: env.BRANCH, url: REPO_URL
                    }
                }
            }
        }
        stage("CleanUp Dockerhub images") {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: "dockerhub_id", usernameVariable: "USERNAME", passwordVariable: "PASSWORD")]) {
                        sh "chmod +x scripts/delete_old_dockerhub_tags.sh"
                        withEnv(getToolsConfig()) {
                            return_value = sh(script: "scripts/delete_old_dockerhub_tags.sh", returnStdout: true).trim()
                        }
                        if (return_value.contains("Could not delete tag")) {
                            unstable(return_value)
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                cleanWs()
            }
        }
    }
}