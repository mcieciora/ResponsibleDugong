services:
  registry:
    image: registry:2
    container_name: rd_registry
    ports:
      - "5000:5000"
    volumes:
      - rd-registry-volume:/var/lib/registry:rw
    networks:
      - service_network
    restart: always
  jenkins:
    image: rd_jenkins
    build: .
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - .jenkins_volume:/var/jenkins_home
      - .ssh_keys:/root/.ssh
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    networks:
      - service_network
    restart: always
  portainer:
    image: portainer/portainer-ce:latest
    container_name: rd_portainer
    ports:
      - "9443:9443"
      - "9000:9000"
    volumes:
      - rd-portainer-volume:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
  app:
    image: mcieciora/exultant_rhino:app_latest
    container_name: rd_exultant_rhino_app
    ports:
      - "8501:8501"
    env_file:
      - .env
    networks:
      - service_network
    restart: always
  api:
    image: mcieciora/exultant_rhino:api_latest
    container_name: rd_exultant_rhino_api
    ports:
      - "8500:8500"
    env_file:
      - .env
    networks:
      - service_network
    restart: always
  db:
    image: postgres
    container_name: rd_postgres
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - rd-postgres-volume:/var/lib/postgresql/data
    networks:
      - service_network
    restart: always
  pgadmin:
    image: dpage/pgadmin4
    container_name: rd_pgadmin4
    ports:
      - "8888:80"
    env_file:
      - .env
    volumes:
      - rd-pgadmin-volume:/var/lib/pgadmin
    restart: always
networks:
  service_network:
      name: jenkins_network
volumes:
  rd-registry-volume:
  rd-portainer-volume:
  rd-postgres-volume:
  rd-pgadmin-volume: