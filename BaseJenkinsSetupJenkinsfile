pipeline {
    agent {
        label "master"
    }
    stages {
        stage ("Check for existing keys") {
            steps {
                script {
                    SSH_KEYS_EXIST = sh(script: "test ! -f /root/.ssh/id_ed25519.pub && test ! -f /root/.ssh/id_ed25519", returnStatus: true)
                    if (SSH_KEYS_EXIST) {
                        error("Keys are already available in /root/.ssh. If you want to generate new pair stop Jenkins and clear this directory.")
                    }
                }
            }
        }
        stage ("Generate ssh keys") {
            steps {
                script {
                    sh "ssh-keygen -t ed25519 -N '' -f /root/.ssh/id_ed25519"
                }
            }
        }
        stage ("Add credentials to Jenkins") {
            steps {
                script {
                    sh "chmod +x scripts/add_ssh_credentials.sh"
                    return_value = sh(script: "scripts/add_ssh_credentials.sh", returnStdout: true).trim()
                }
            }
        }
        stage ("Input public key into GitHub") {
            steps {
                script {
                    sh "cat /root/.ssh/id_ed25519.pub"
                    def githubKeysAdded = input(id: "github_keys_added", message: "")
                }
            }
        }
        stage ("Finalize SSH setup") {
            steps {
                script {
                    sh "ssh-keyscan github.com >> ~/.ssh/known_hosts"
                }
            }
        }
    }
}